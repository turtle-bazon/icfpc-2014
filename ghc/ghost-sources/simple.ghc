; directions
%def _d_up,0
%def _d_right,1
%def _d_down,2
%def _d_left,3

; vitality modes
%def _v_standard,0
%def _v_fright_mode,1
%def _v_invisible,2

; map contents
%def _m_wall,0
%def _m_empty,1
%def _m_pill,2
%def _m_power_pill,3
%def _m_fruti,4
%def _m_lm_start,5
%def _m_gh_start,6

; defaults from int's
%def _x_coor,a
%def _y_coor,b
%def _my_newdir,a
%def _gh_vitality,a
%def _gh_direction,b
%def _gh_index,a

; int aliases
%def _chdir,0
%def _lm1_pos,1
%def _lm2_pos,2
%def _my_index,3
%def _gh_start_coor,4
%def _gh_cur_coor,5
%def _gh_stat,6
%def _map_cont,7
%def _debug,8

; some constants
%def _sight_area_size,5
%def _sight_min_area_disp,2
%def _sight_area_min_step,1
%def _sight_area_max_step,3
%def _sight_max_area_disp,253

;;; program ;;;

; definitions
%def _unknown,255
%def _no_way,254

; variables
%def !gh_x,[255]
%def !gh_y,[254]
%def !sight_corner_x,[253]
%def !sight_corner_y,[252]
%def !cur_counter,[251]
%def !replaces_count,[250]
%def !cur_x,[249]
%def !cur_y,[248]
%def !cur_local_x,[247]
%def !cur_local_y,[246]
%def !tmp_x,[245]
%def !tmp_y,[244]
%def !finished_map,[243]
%def !in_process,[242]

    int _my_index
    int _gh_cur_coor
    int _chdir

    jgt back_analyze,!finished_map,0
    jgt skip_init,!in_process,0

; << fill with zero sight area
    mov a,_sight_area_size
row_zero_fill:
    mov b,_sight_area_size
col_zero_fill:
    mov c,a
    dec c
    mul c,_sight_area_size
    add c,b
    dec c
    mov [c],_unknown
    dec b
    jgt col_zero_fill,b,0
    dec a
    jgt row_zero_fill,a,0
; >> fill with zero sight area

    int _my_index
    int _gh_cur_coor
    mov !gh_x,_x_coor
    mov !gh_y,_y_coor

    jgt check_x_more_255,_x_coor,_sight_min_area_disp
    mov _x_coor,_sight_min_area_disp
check_x_more_255:
    jlt skip_as_is_gh_coor_x,_x_coor,_sight_max_area_disp
    mov _x_coor,_sight_max_area_disp
skip_as_is_gh_coor_x:

    jgt check_y_more_255,_y_coor,_sight_min_area_disp
    mov _y_coor,_sight_min_area_disp
check_y_more_255:
    jlt skip_as_is_gh_coor_y,_y_coor,_sight_max_area_disp
    mov _y_coor,_sight_max_area_disp
skip_as_is_gh_coor_y:

    sub _x_coor,_sight_min_area_disp
    sub _y_coor,_sight_min_area_disp

    ; save to variables corner of sight area
    mov !sight_corner_x,_x_coor
    mov !sight_corner_y,_y_coor

; >> mark ghost cell as 0
    mov d,!gh_x
    mov e,!gh_y
    sub d,!sight_corner_x
    sub e,!sight_corner_y
    mov c,d
    mul c,_sight_area_size
    add c,e
    mov [c],0
; << mark ghost cell as 0
    
    mov !in_process,255
skip_init:

area_cycle:
    mov !replaces_count,0

    mov b,_sight_area_size
    mul b,_sight_area_size

area_check:
    mov c,b
    dec c
    jgt skip_analyze_point,[c],127

; << analyze current cell
    mov !cur_counter,[c]
    mov d,c
    div d,_sight_area_size
    mov !cur_local_x,d
    mov !cur_x,d
    add !cur_x,!sight_corner_x
    mul d,_sight_area_size
    mov e,c
    sub e,d
    mov !cur_local_y,e
    mov !cur_y,e
    add !cur_y,!sight_corner_y

    ; up
    jlt finish_up,!cur_local_y,_sight_area_min_step
    mov d,c
    dec d
    jlt finish_up,[d],_unknown
    mov !tmp_y,!cur_y
    dec !tmp_y
    mov _x_coor,!cur_x
    mov _y_coor,!tmp_y
    int _map_cont
    jeq skip_wall_up,a,_m_wall
    mov [d],[c]
    inc [d]
    jgt finish_up,[d],0
skip_wall_up:
    mov [d],_no_way
finish_up:

    ; down
    jgt finish_down,!cur_local_y,_sight_area_max_step
    mov d,c
    inc d
    jlt finish_down,[d],_unknown
    mov !tmp_y,!cur_y
    inc !tmp_y
    mov _x_coor,!cur_x
    mov _y_coor,!tmp_y
    int _map_cont
    jeq skip_wall_down,a,_m_wall
    mov [d],[c]
    inc [d]
    jgt finish_down,[d],0
skip_wall_down:
    mov [d],254
finish_down:

    ; right
    jgt finish_right,!cur_local_x,_sight_area_max_step
    mov d,c
    add d,_sight_area_size
    jlt finish_right,[d],_unknown
    mov !tmp_x,!cur_x
    inc !tmp_x
    mov _x_coor,!tmp_x
    mov _y_coor,!cur_y
    int _map_cont
    jeq skip_wall_right,a,_m_wall
    mov [d],[c]
    inc [d]
    jgt finish_right,[d],0
skip_wall_right:
    mov [d],254
finish_right:

    ; left
    jlt finish_left,!cur_local_x,_sight_area_min_step
    mov d,c
    sub d,_sight_area_size
    jlt finish_left,[d],_unknown
    mov !tmp_x,!cur_x
    dec !tmp_x
    mov _x_coor,!tmp_x
    mov _y_coor,!cur_y
    int _map_cont
    jeq skip_wall_left,a,_m_wall
    mov [d],[c]
    inc [d]
    jgt finish_left,[d],0
skip_wall_left:
    mov [d],254
finish_left:

    or [c],128
    inc !replaces_count

; >> analyze current cell

skip_analyze_point:
    dec b
    jgt area_check,b,0
    jgt area_cycle,!replaces_count,0
    mov !in_process,0

back_analyze:

    mov !finished_map,255

move:

    hlt

